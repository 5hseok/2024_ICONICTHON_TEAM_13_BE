name: Deploy Prochord
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # 1. 리포지토리 코드 체크아웃
      - name: Check out the repository
        uses: actions/checkout@v3

      # 2. Docker Hub 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: List files in current directory
        run: ls -la

      # 3. Docker 이미지 빌드 및 테스트 실행 후 push
      - name: Build Docker image for testing
        run: docker buildx build --platform linux/amd64 --load --tag 5hseok/prochord_server:0.0.1 -f ./Dockerfile .

      # Docker Hub로 이미지 push
      - name: Push Docker image to Docker Hub
        run: docker push 5hseok/prochord_server:0.0.1

      # 4. EC2에 SSH로 연결하여 배포
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Docker Compose 파일이 있는 디렉토리로 이동
            cd /home/ubuntu/app

            # 환경 변수 설정 (EC2에 직접 전달)
            export SPRING_PROFILES_ACTIVE=docker
            export SPRING_DATASOURCE_URL=${{ secrets.RDS_URL }}
            export SPRING_DATASOURCE_USERNAME=${{ secrets.RDS_USERNAME }}
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.RDS_PASSWORD }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}

            # Docker 이미지 pull 및 컨테이너 재실행
            docker pull 5hseok/prochord_server:0.0.1

            # 이전 컨테이너 종료 및 제거
            if [ "$(docker ps -q -f name=spring_app)" ]; then
              docker stop spring_app && docker rm spring_app
            fi

            # 새 컨테이너 실행
            docker run -d --name spring_app -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE \
              -e SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL \
              -e SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME \
              -e SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD \
              -e JWT_SECRET=$JWT_SECRET \
              5hseok/prochord_server:0.0.1

            # spring_app 컨테이너의 로그 출력
            docker logs spring_app
